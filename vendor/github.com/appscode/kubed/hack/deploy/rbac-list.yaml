apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubed-operator
  labels:
    app: kubed
rules:
- apiGroups:
  - ""
  - apps
  - authentication.k8s.io
  - authorization.k8s.io
  - autoscaling
  - batch
  - certificates.k8s.io
  - extensions
  - networking.k8s.io
  - storage.k8s.io
  - monitoring.coreos.com
  - kubedb.com
  - monitoring.appscode.com
  - rbac.authorization.k8s.io
  - stash.appscode.com
  - voyager.appscode.com
  resources: ["*"]
  verbs: ["list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  verbs: ["get", "create", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubed-operator
  labels:
    app: kubed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubed-operator
subjects:
- kind: ServiceAccount
  name: ${KUBED_SERVICE_ACCOUNT}
  namespace: ${KUBED_NAMESPACE}
---
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubed-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    app: kubed
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: ${KUBED_SERVICE_ACCOUNT}
  namespace: ${KUBED_NAMESPACE}
---
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubed-apiserver-auth-delegator
  labels:
    app: kubed
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: ${KUBED_SERVICE_ACCOUNT}
  namespace: ${KUBED_NAMESPACE}
---
# to let aggregated apiservers create admission reviews
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:kubed:apiserver-requester
  labels:
    app: kubed
rules:
- apiGroups: ['kubed.appscode.com']
  resources: ['*']
  verbs: ['get']
